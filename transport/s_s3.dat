/*********************************************
 * OPL 22.1.1.0 Data
 * Author: czj
 * Creation Date: Jul 12, 2024 at 2:18:24 PM
 *********************************************/

Arcs = {<"A","B">, <"B","C">, <"A","D">, <"D","E">, <"E","C">, <"B","E">, <"C","F">, <"E","F">,
        <"A","G">, <"G","H">, <"H","I">, <"I","J">, <"J","K">, <"K","L">, <"L","M">, <"M","N">,
        <"N","O">, <"O","P">, <"P","Q">, <"Q","R">, <"R","S">, <"S","T">, <"T","U">};

Nodes = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U"};
Modes = {"rail", "truck"};

GoodsDetails = {
    <"G1", "A", "C", 50, 10, 10>,
    <"G2", "A", "C", 30, 15, 10>,
    <"G3", "B", "F", 70, 50, 10>,
    <"G4", "D", "E", 40, 50, 10>,
    <"G5", "A", "F", 60, 13, 30>,
    <"G6", "E", "C", 20, 29, 10>,
    <"G7", "G", "L", 45, 25, 20>,
    <"G8", "H", "M", 55, 30, 25>,
};

Cost = [
    [0, 5],  // (A, B)
    [0, 4],  // (B, C)
    [4, 6],  // (A, D)
    [3, 5],  // (D, E)
    [2, 4],  // (E, C)
    [1, 3],  // (B, E)
    [0, 6],  // (C, F)
    [3, 5],  // (E, F)
    [4, 6],  // (A, G)
    [0, 7],  // (G, H)
    [6, 8],  // (H, I)
    [0, 9],  // (I, J)
    [8, 10], // (J, K)
    [9, 11], // (K, L)
    [0, 12], // (L, M)
    [11, 13], // (M, N)
    [0, 14], // (N, O)
    [13, 15], // (O, P)
    [14, 16], // (P, Q)
    [15, 17], // (Q, R)
    [0, 18], // (R, S)
    [17, 19], // (S, T)
    [18, 20]  // (T, U)
];

Time = [
    [0, 3],  // (A, B)
    [0, 2],  // (B, C)
    [6, 4],  // (A, D)
    [5, 3],  // (D, E)
    [4, 2],  // (E, C)
    [2, 1],  // (B, E)
    [0, 4],  // (C, F)
    [5, 3],  // (E, F)
    [6, 4],  // (A, G)
    [0, 5],  // (G, H)
    [8, 6],  // (H, I)
    [0, 7],  // (I, J)
    [10, 8], // (J, K)
    [11, 9], // (K, L)
    [0, 10], // (L, M)
    [13, 11], // (M, N)
    [0, 12], // (N, O)
    [15, 13], // (O, P)
    [16, 14], // (P, Q)
    [17, 15], // (Q, R)
    [0, 16], // (R, S)
    [19, 17], // (S, T)
    [20, 18]  // (T, U)
];

Capacity = [
    [0, 80],  // (A, B)
    [0, 80],  // (B, C)
    [150, 100],  // (A, D)
    [100, 80],  // (D, E)
    [100, 80],  // (E, C)
    [400, 72],  // (B, E)
    [0, 100],  // (C, F)
    [100, 80],  // (E, F)
    [150, 100],  // (A, G)
    [0, 120],  // (G, H)
    [250, 140],  // (H, I)
    [0, 160],  // (I, J)
    [350, 90],  // (J, K)
    [400, 100], // (K, L)
    [0, 110], // (L, M)
    [500, 120], // (M, N)
    [0, 130], // (N, O)
    [600, 140], // (O, P)
    [650, 150], // (P, Q)
    [700, 160], // (Q, R)
    [0, 170], // (R, S)
    [800, 180], // (S, T)
    [850, 190]  // (T, U)
]; 


fCost = [
    [0, 0],  // (A, B)
    [0, 0],  // (B, C)
    [0, 0],  // (A, D)
    [0, 0],  // (D, E)
    [0, 0],  // (E, C)
    [0, 0],  // (B, E)
    [0, 0],  // (C, F)
    [0, 0],  // (E, F)
    [0, 0],  // (A, G)
    [0, 0],  // (G, H)
    [0, 0],  // (H, I)
    [0, 0],  // (I, J)
    [0, 0],  // (J, K)
    [0, 0],  // (K, L)
    [0, 0],  // (L, M)
    [0, 0],  // (M, N)
    [0, 0],  // (N, O)
    [0, 0],  // (O, P)
    [0, 0],  // (P, Q)
    [0, 0],  // (Q, R)
    [0, 0],  // (R, S)
    [0, 0],  // (S, T)
    [0, 0]   // (T, U)
];

fTime = [
    [0, 0],  // (A, B)
    [0, 0],  // (B, C)
    [0, 0],  // (A, D)
    [0, 0],  // (D, E)
    [0, 0],  // (E, C)
    [0, 0],  // (B, E)
    [0, 0],  // (C, F)
    [0, 0],  // (E, F)
    [0, 0],  // (A, G)
    [0, 0],  // (G, H)
    [0, 0],  // (H, I)
    [0, 0],  // (I, J)
    [0, 0],  // (J, K)
    [0, 0],  // (K, L)
    [0, 0],  // (L, M)
    [0, 0],  // (M, N)
    [0, 0],  // (N, O)
    [0, 0],  // (O, P)
    [0, 0],  // (P, Q)
    [0, 0],  // (Q, R)
    [0, 0],  // (R, S)
    [0, 0],  // (S, T)
    [0, 0]   // (T, U)
];

fCapacity = [
    [0, 0],  // (A, B)
    [0, 0],  // (B, C)
    [0, 0],  // (A, D)
    [0, 0],  // (D, E)
    [0, 0],  // (E, C)
    [0, 0],  // (B, E)
    [0, 0],  // (C, F)
    [0, 0],  // (E, F)
    [0, 0],  // (A, G)
    [0, 0],  // (G, H)
    [0, 0],  // (H, I)
    [0, 0],  // (I, J)
    [0, 0],  // (J, K)
    [0, 0],  // (K, L)
    [0, 0],  // (L, M)
    [0, 0],  // (M, N)
    [0, 0],  // (N, O)
    [0, 0],  // (O, P)
    [0, 0],  // (P, Q)
    [0, 0],  // (Q, R)
    [0, 0],  // (R, S)
    [0, 0],  // (S, T)
    [0, 0]   // (T, U)
];


